import { Key, useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { fetchCard } from "../redux/reducers/cardReducer";
import Card from "./components/Card";
import Prev from "./components/Prev";
import Nav from "./components/Nav";
import Filter from "./components/Filter";
import ReactPaginate from "react-paginate";

import Image from "next/image";


const Home: NextPage = () => {
  const dispatch: any = useDispatch();
  const { cards } = useSelector((state: any) => state.card);
  const [currentCard, setCurrentCard] = useState([]);
  const [pageCount, setPageCount] = useState(0); // number of pages
  const [itemOffset, setItemOffset] = useState(0); // offset for the current page
  const itemsPerPage: number = 100;

  const [filter, setFilter] = useState(false);

  useEffect(() => {
    dispatch(fetchCard());
  }, [dispatch]);

  useEffect(() => {
    if (cards) {
      setCurrentCard(cards.slice(itemOffset, itemOffset + itemsPerPage));
      setPageCount(Math.ceil(cards.length / itemsPerPage));
    } else {
      setCurrentCard([]);
    }
  }, [cards, itemOffset, itemsPerPage]);

  const handlePageClick = (e: any) => {
    const newOffset = (e.selected * itemsPerPage) % cards.length;
    setItemOffset(newOffset);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Yu-gi-oh</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Nav />
      <main className={styles.main}>
        {cards.length ? (
          <>
            {filter && <Filter setItemOffset={setItemOffset} setFilter={setFilter} />}
            <div className={styles.subTitles}>
              <h2>
                <span>プレビュー</span>
                <span>Preview</span>
              </h2>
              <button onClick={() => setFilter(!filter)} className={styles.filterBtn}>
                <Image
                  src="/assets/filter.png"
                  alt="filter"
                  width={25}
                  height={25}
                />
              </button>
            </div>
            <div className={styles.grid}>
              <Prev />
              <div className={styles.gridCard}>
                {currentCard.map((card: any, index: Key) => 
                  <Card key={index} {...card} />
                )}
              </div>
            </div>
            <ReactPaginate
              breakLabel="..."
              nextLabel=">"
              onPageChange={handlePageClick}
              pageRangeDisplayed={3}
              marginPagesDisplayed={2}
              pageCount={pageCount}
              previousLabel="<"
              containerClassName={styles.pagination}
              pageClassName={styles.pageNum}
              activeClassName={styles.active}
              previousLinkClassName={styles.pageNum}
              nextLinkClassName={styles.pageNum}
              activeLinkClassName={styles.active}
              disabledClassName={styles.disabled}
            />
          </>
        ) : (
          <img
            src="https://i.giphy.com/media/TaqwJP3Pyu0Ja/giphy.webp"
            alt="loading"
          />
        )}
      </main>
    </div>
  );
};

export default Home;
